pipeline {
    agent {
        docker {
            image 'ubuntu'
            args '-u root:sudo -v $HOME/workspace/myproject:/myproject'
        }
    }
    stages {
        stage("setup_env") {
            steps {
                sh 'apt-get update -y'
                sh 'apt-get install -y ca-certificates curl gnupg lsb-release wget'
                sh 'mkdir -p /etc/apt/keyrings'
                sh 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --yes --dearmor -o /etc/apt/keyrings/docker.gpg'
                sh 'echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null'
                sh 'apt-get update -y'
                sh 'apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin'
                sh 'update-alternatives --set iptables /usr/sbin/iptables-legacy'
                sh 'update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy'
                sh 'wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64'
                sh 'chmod a+x /usr/local/bin/yq'
            }
        }
        stage("docker_start") {
            steps {
                sh 'docker info'
                sh '/etc/init.d/docker start'
            }
        }
        stage("docker-compose_setup") {
            steps {
                sh 'curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose'
                sh 'chmod +x /usr/local/bin/docker-compose'
                sh 'docker-compose --version'
            }
        }

        stage("clone_netbox") {
            steps {
                sh 'git clone -b 2.3.0 https://github.com/netbox-community/netbox-docker.git'
                sh 'cd netbox-docker'
                sh 'yq -i \'del(.services.netbox.volumes)\'  netbox-docker/docker-compose.yml'
                sh 'yq -i \'.services.netbox.healthcheck.timeout = "10s"\' netbox-docker/docker-compose.yml'
                sh 'yq -i \'.services.netbox-worker.healthcheck.timeout = "10s"\' netbox-docker/docker-compose.yml'
                sh 'yq -i \'.services.netbox-housekeeping.healthcheck.timeout = "10s"\' netbox-docker/docker-compose.yml'
                sh 'yq -i \'.services.netbox.ports[0] = "8000:8080"\' '
            }
        }

        stage("docker-compose") {
            steps {
                sh 'docker-compose -f netbox-docker/docker-compose.yml pull'
                sh 'docker-compose -f netbox-docker/docker-compose.yml up -d'
            }
        }
    }
    post {
        success {
            echo 'Do something when it is successful'
            sh 'rm -r netbox-docker'
        }
        failure {
            echo 'Do something when it is failed'
            sh 'rm -r netbox-docker'
        }
    }
}